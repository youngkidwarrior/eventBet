{
  "contractName": "TutorialToken",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x06fdde03"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x095ea7b3"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x18160ddd"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_from",
          "type": "address"
        },
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x23b872dd"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "INITIAL_SUPPLY",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x2ff2e9dc"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x313ce567"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0x66188463"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x70a08231"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "name": "",
          "type": "string"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0x95d89b41"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_to",
          "type": "address"
        },
        {
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xa9059cbb"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_spender",
          "type": "address"
        },
        {
          "name": "_addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseApproval",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function",
      "signature": "0xd73dd623"
    },
    {
      "constant": true,
      "inputs": [
        {
          "name": "_owner",
          "type": "address"
        },
        {
          "name": "_spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function",
      "signature": "0xdd62ed3e"
    },
    {
      "inputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor",
      "signature": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event",
      "signature": "0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event",
      "signature": "0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef"
    }
  ],
  "bytecode": "0x60c0604052600d60808190527f5475746f7269616c546f6b656e0000000000000000000000000000000000000060a090815261003e91600391906100b9565b506040805180820190915260028082527f54540000000000000000000000000000000000000000000000000000000000006020909201918252610083916004916100b9565b506002600555612ee060065534801561009b57600080fd5b50600654600181905533600090815260208190526040902055610154565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f106100fa57805160ff1916838001178555610127565b82800160010185558215610127579182015b8281111561012757825182559160200191906001019061010c565b50610133929150610137565b5090565b61015191905b80821115610133576000815560010161013d565b90565b61092a806101636000396000f3fe6080604052600436106100b3577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100b8578063095ea7b31461014257806318160ddd1461018f57806323b872dd146101b65780632ff2e9dc146101f9578063313ce5671461020e578063661884631461022357806370a082311461025c57806395d89b411461028f578063a9059cbb146102a4578063d73dd623146102dd578063dd62ed3e14610316575b600080fd5b3480156100c457600080fd5b506100cd610351565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101075781810151838201526020016100ef565b50505050905090810190601f1680156101345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014e57600080fd5b5061017b6004803603604081101561016557600080fd5b50600160a060020a0381351690602001356103df565b604080519115158252519081900360200190f35b34801561019b57600080fd5b506101a4610445565b60408051918252519081900360200190f35b3480156101c257600080fd5b5061017b600480360360608110156101d957600080fd5b50600160a060020a0381358116916020810135909116906040013561044b565b34801561020557600080fd5b506101a46105c2565b34801561021a57600080fd5b506101a46105c8565b34801561022f57600080fd5b5061017b6004803603604081101561024657600080fd5b50600160a060020a0381351690602001356105ce565b34801561026857600080fd5b506101a46004803603602081101561027f57600080fd5b5035600160a060020a03166106be565b34801561029b57600080fd5b506100cd6106d9565b3480156102b057600080fd5b5061017b600480360360408110156102c757600080fd5b50600160a060020a038135169060200135610734565b3480156102e957600080fd5b5061017b6004803603604081101561030057600080fd5b50600160a060020a038135169060200135610815565b34801561032257600080fd5b506101a46004803603604081101561033957600080fd5b50600160a060020a03813581169160200135166108ae565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d75780601f106103ac576101008083540402835291602001916103d7565b820191906000526020600020905b8154815290600101906020018083116103ba57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6000600160a060020a038316151561046257600080fd5b600160a060020a03841660009081526020819052604090205482111561048757600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156104b757600080fd5b600160a060020a0384166000908152602081905260409020546104e0908363ffffffff6108d916565b600160a060020a038086166000908152602081905260408082209390935590851681522054610515908363ffffffff6108eb16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610557908363ffffffff6108d916565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60065481565b60055481565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561062357336000908152600260209081526040808320600160a060020a0388168452909152812055610658565b610633818463ffffffff6108d916565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d75780601f106103ac576101008083540402835291602001916103d7565b6000600160a060020a038316151561074b57600080fd5b3360009081526020819052604090205482111561076757600080fd5b33600090815260208190526040902054610787908363ffffffff6108d916565b3360009081526020819052604080822092909255600160a060020a038516815220546107b9908363ffffffff6108eb16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610849908363ffffffff6108eb16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156108e557fe5b50900390565b818101828110156108f857fe5b9291505056fea165627a7a72305820b985e11a1f0da6a8116da5bbccc6b35d44758842ef0b4c33f0350a10e4828d0f0029",
  "deployedBytecode": "0x6080604052600436106100b3577c0100000000000000000000000000000000000000000000000000000000600035046306fdde0381146100b8578063095ea7b31461014257806318160ddd1461018f57806323b872dd146101b65780632ff2e9dc146101f9578063313ce5671461020e578063661884631461022357806370a082311461025c57806395d89b411461028f578063a9059cbb146102a4578063d73dd623146102dd578063dd62ed3e14610316575b600080fd5b3480156100c457600080fd5b506100cd610351565b6040805160208082528351818301528351919283929083019185019080838360005b838110156101075781810151838201526020016100ef565b50505050905090810190601f1680156101345780820380516001836020036101000a031916815260200191505b509250505060405180910390f35b34801561014e57600080fd5b5061017b6004803603604081101561016557600080fd5b50600160a060020a0381351690602001356103df565b604080519115158252519081900360200190f35b34801561019b57600080fd5b506101a4610445565b60408051918252519081900360200190f35b3480156101c257600080fd5b5061017b600480360360608110156101d957600080fd5b50600160a060020a0381358116916020810135909116906040013561044b565b34801561020557600080fd5b506101a46105c2565b34801561021a57600080fd5b506101a46105c8565b34801561022f57600080fd5b5061017b6004803603604081101561024657600080fd5b50600160a060020a0381351690602001356105ce565b34801561026857600080fd5b506101a46004803603602081101561027f57600080fd5b5035600160a060020a03166106be565b34801561029b57600080fd5b506100cd6106d9565b3480156102b057600080fd5b5061017b600480360360408110156102c757600080fd5b50600160a060020a038135169060200135610734565b3480156102e957600080fd5b5061017b6004803603604081101561030057600080fd5b50600160a060020a038135169060200135610815565b34801561032257600080fd5b506101a46004803603604081101561033957600080fd5b50600160a060020a03813581169160200135166108ae565b6003805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d75780601f106103ac576101008083540402835291602001916103d7565b820191906000526020600020905b8154815290600101906020018083116103ba57829003601f168201915b505050505081565b336000818152600260209081526040808320600160a060020a038716808552908352818420869055815186815291519394909390927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925928290030190a350600192915050565b60015490565b6000600160a060020a038316151561046257600080fd5b600160a060020a03841660009081526020819052604090205482111561048757600080fd5b600160a060020a03841660009081526002602090815260408083203384529091529020548211156104b757600080fd5b600160a060020a0384166000908152602081905260409020546104e0908363ffffffff6108d916565b600160a060020a038086166000908152602081905260408082209390935590851681522054610515908363ffffffff6108eb16565b600160a060020a03808516600090815260208181526040808320949094559187168152600282528281203382529091522054610557908363ffffffff6108d916565b600160a060020a03808616600081815260026020908152604080832033845282529182902094909455805186815290519287169391927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef929181900390910190a35060019392505050565b60065481565b60055481565b336000908152600260209081526040808320600160a060020a03861684529091528120548083111561062357336000908152600260209081526040808320600160a060020a0388168452909152812055610658565b610633818463ffffffff6108d916565b336000908152600260209081526040808320600160a060020a03891684529091529020555b336000818152600260209081526040808320600160a060020a0389168085529083529281902054815190815290519293927f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929181900390910190a35060019392505050565b600160a060020a031660009081526020819052604090205490565b6004805460408051602060026001851615610100026000190190941693909304601f810184900484028201840190925281815292918301828280156103d75780601f106103ac576101008083540402835291602001916103d7565b6000600160a060020a038316151561074b57600080fd5b3360009081526020819052604090205482111561076757600080fd5b33600090815260208190526040902054610787908363ffffffff6108d916565b3360009081526020819052604080822092909255600160a060020a038516815220546107b9908363ffffffff6108eb16565b600160a060020a038416600081815260208181526040918290209390935580518581529051919233927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9281900390910190a350600192915050565b336000908152600260209081526040808320600160a060020a0386168452909152812054610849908363ffffffff6108eb16565b336000818152600260209081526040808320600160a060020a0389168085529083529281902085905580519485525191937f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925929081900390910190a350600192915050565b600160a060020a03918216600090815260026020908152604080832093909416825291909152205490565b6000828211156108e557fe5b50900390565b818101828110156108f857fe5b9291505056fea165627a7a72305820b985e11a1f0da6a8116da5bbccc6b35d44758842ef0b4c33f0350a10e4828d0f0029",
  "sourceMap": "142:36:3:-;98:288;142:36;;98:288;142:36;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;182:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;236:1;213:24;;270:5;241:34;;280:104;8:9:-1;5:2;;;30:1;27;20:12;5:2;-1:-1;322:14:3;;307:12;:29;;;351:10;-1:-1:-1;342:20:3;;;;;;;;;;:37;98:288;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;98:288:3;;;-1:-1:-1;98:288:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "98:288:3:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;142:36;;8:9:-1;5:2;;;30:1;27;20:12;5:2;142:36:3;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8:100:-1;33:3;30:1;27:10;8:100;;;90:11;;;84:18;71:11;;;64:39;52:2;45:10;8:100;;;12:14;142:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1813:188:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1813:188:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;1813:188:9;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;370:83:6;;8:9:-1;5:2;;;30:1;27;20:12;5:2;370:83:6;;;:::i;:::-;;;;;;;;;;;;;;;;725:470:9;;8:9:-1;5:2;;;30:1;27;20:12;5:2;725:470:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;725:470:9;;;;;;;;;;;;;;;;;:::i;241:34:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;241:34:3;;;:::i;213:24::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;213:24:3;;;:::i;3678:431:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;3678:431:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;3678:431:9;;;;;;;;:::i;1130:99:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;1130:99:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;1130:99:6;-1:-1:-1;;;;;1130:99:6;;:::i;182:27:3:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;182:27:3;;;:::i;607:321:6:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;607:321:6;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;607:321:6;;;;;;;;:::i;2925:296:9:-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2925:296:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2925:296:9;;;;;;;;:::i;2320:153::-;;8:9:-1;5:2;;;30:1;27;20:12;5:2;2320:153:9;;;;;;13:2:-1;8:3;5:11;2:2;;;29:1;26;19:12;2:2;-1:-1;;;;;;2320:153:9;;;;;;;;;;:::i;142:36:3:-;;;;;;;;;;;;;;;-1:-1:-1;;142:36:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;1813:188:9:-;1900:10;1880:4;1892:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;1892:29:9;;;;;;;;;;;:38;;;1941;;;;;;;1880:4;;1892:29;;1900:10;;1941:38;;;;;;;;-1:-1:-1;1992:4:9;1813:188;;;;:::o;370:83:6:-;436:12;;370:83;:::o;725:470:9:-;831:4;-1:-1:-1;;;;;853:17:9;;;;845:26;;;;;;-1:-1:-1;;;;;895:15:9;;:8;:15;;;;;;;;;;;885:25;;;877:34;;;;;;-1:-1:-1;;;;;935:14:9;;;;;;:7;:14;;;;;;;;950:10;935:26;;;;;;;;925:36;;;917:45;;;;;;-1:-1:-1;;;;;987:15:9;;:8;:15;;;;;;;;;;;:27;;1007:6;987:27;:19;:27;:::i;:::-;-1:-1:-1;;;;;969:15:9;;;:8;:15;;;;;;;;;;;:45;;;;1036:13;;;;;;;:25;;1054:6;1036:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;1020:13:9;;;:8;:13;;;;;;;;;;;:41;;;;1096:14;;;;;:7;:14;;;;;1111:10;1096:26;;;;;;;:38;;1127:6;1096:38;:30;:38;:::i;:::-;-1:-1:-1;;;;;1067:14:9;;;;;;;:7;:14;;;;;;;;1082:10;1067:26;;;;;;;;:67;;;;1145:28;;;;;;;;;;;1067:14;;1145:28;;;;;;;;;;;-1:-1:-1;1186:4:9;725:470;;;;;:::o;241:34:3:-;;;;:::o;213:24::-;;;;:::o;3678:431:9:-;3825:10;3784:4;3817:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3817:29:9;;;;;;;;;;3856:27;;;3852:164;;;3901:10;3925:1;3893:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3893:29:9;;;;;;;;;:33;3852:164;;;3979:30;:8;3992:16;3979:30;:12;:30;:::i;:::-;3955:10;3947:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3947:29:9;;;;;;;;;:62;3852:164;4035:10;4057:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;4026:61:9;;4057:29;;;;;;;;;;;4026:61;;;;;;;;;4035:10;4026:61;;;;;;;;;;;-1:-1:-1;4100:4:9;;3678:431;-1:-1:-1;;;3678:431:9:o;1130:99:6:-;-1:-1:-1;;;;;1208:16:6;1186:7;1208:16;;;;;;;;;;;;1130:99::o;182:27:3:-;;;;;;;;;;;;;;;-1:-1:-1;;182:27:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;607:321:6;670:4;-1:-1:-1;;;;;690:17:6;;;;682:26;;;;;;741:10;732:8;:20;;;;;;;;;;;722:30;;;714:39;;;;;;792:10;783:8;:20;;;;;;;;;;;:32;;808:6;783:32;:24;:32;:::i;:::-;769:10;760:8;:20;;;;;;;;;;;:55;;;;-1:-1:-1;;;;;837:13:6;;;;;;:25;;855:6;837:25;:17;:25;:::i;:::-;-1:-1:-1;;;;;821:13:6;;:8;:13;;;;;;;;;;;;:41;;;;873:33;;;;;;;821:13;;882:10;;873:33;;;;;;;;;;-1:-1:-1;919:4:6;607:321;;;;:::o;2925:296:9:-;3088:10;3026:4;3080:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3080:29:9;;;;;;;;;;:46;;3114:11;3080:46;:33;:46;:::i;:::-;3048:10;3040:19;;;;:7;:19;;;;;;;;-1:-1:-1;;;;;3040:29:9;;;;;;;;;;;;:87;;;3138:61;;;;;;3040:29;;3138:61;;;;;;;;;;;-1:-1:-1;3212:4:9;2925:296;;;;:::o;2320:153::-;-1:-1:-1;;;;;2443:15:9;;;2419:7;2443:15;;;:7;:15;;;;;;;;:25;;;;;;;;;;;;;2320:153::o;1041:110:5:-;1099:7;1121:6;;;;1114:14;;;;-1:-1:-1;1141:5:5;;;1041:110::o;1213:123::-;1292:5;;;1310:6;;;;1303:14;;;;1213:123;;;;:::o",
  "source": "pragma solidity ^0.5.1;\n\nimport \"openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol\";\n\ncontract TutorialToken is StandardToken {\n  string public name = \"TutorialToken\";\n  string public symbol = \"TT\";\n  uint public decimals = 2;\n  uint public INITIAL_SUPPLY = 12000;\n\n  constructor() public {\n    totalSupply_ = INITIAL_SUPPLY;\n    balances[msg.sender] = INITIAL_SUPPLY;\n  }\n}\n",
  "sourcePath": "D:/Users/Documents/eventBet/contracts/TutorialToken.sol",
  "ast": {
    "absolutePath": "/D/Users/Documents/eventBet/contracts/TutorialToken.sol",
    "exportedSymbols": {
      "TutorialToken": [
        241
      ]
    },
    "id": 242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 210,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 211,
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 777,
        "src": "25:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 212,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 776,
              "src": "124:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$776",
                "typeString": "contract StandardToken"
              }
            },
            "id": 213,
            "nodeType": "InheritanceSpecifier",
            "src": "124:13:3"
          }
        ],
        "contractDependencies": [
          497,
          454,
          529,
          776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          776,
          454,
          497,
          529
        ],
        "name": "TutorialToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 216,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "142:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 214,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "142:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5475746f7269616c546f6b656e",
              "id": 215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "163:15:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1e27d619d62987a17e3872af4db4b646569fa29e361d85623518cddc62d1e3b9",
                "typeString": "literal_string \"TutorialToken\""
              },
              "value": "TutorialToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 219,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "182:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 217,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "182:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5454",
              "id": 218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "205:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                "typeString": "literal_string \"TT\""
              },
              "value": "TT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 222,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "213:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 220,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "213:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 221,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "236:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 225,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "241:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 223,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "241:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3132303030",
              "id": 224,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "270:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_12000_by_1",
                "typeString": "int_const 12000"
              },
              "value": "12000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "301:83:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "307:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 229,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "322:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "307:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "307:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "342:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "351:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "365:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "342:37:3"
                }
              ]
            },
            "documentation": null,
            "id": 240,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:2:3"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:3"
            },
            "scope": 241,
            "src": "280:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "98:288:3"
      }
    ],
    "src": "0:387:3"
  },
  "legacyAST": {
    "absolutePath": "/D/Users/Documents/eventBet/contracts/TutorialToken.sol",
    "exportedSymbols": {
      "TutorialToken": [
        241
      ]
    },
    "id": 242,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 210,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".1"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:3"
      },
      {
        "absolutePath": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "file": "openzeppelin-solidity/contracts/token/ERC20/StandardToken.sol",
        "id": 211,
        "nodeType": "ImportDirective",
        "scope": 242,
        "sourceUnit": 777,
        "src": "25:71:3",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": null,
            "baseName": {
              "contractScope": null,
              "id": 212,
              "name": "StandardToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 776,
              "src": "124:13:3",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardToken_$776",
                "typeString": "contract StandardToken"
              }
            },
            "id": 213,
            "nodeType": "InheritanceSpecifier",
            "src": "124:13:3"
          }
        ],
        "contractDependencies": [
          497,
          454,
          529,
          776
        ],
        "contractKind": "contract",
        "documentation": null,
        "fullyImplemented": true,
        "id": 241,
        "linearizedBaseContracts": [
          241,
          776,
          454,
          497,
          529
        ],
        "name": "TutorialToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 216,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "142:36:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 214,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "142:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5475746f7269616c546f6b656e",
              "id": 215,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "163:15:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_1e27d619d62987a17e3872af4db4b646569fa29e361d85623518cddc62d1e3b9",
                "typeString": "literal_string \"TutorialToken\""
              },
              "value": "TutorialToken"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 219,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "182:27:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 217,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "182:6:3",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "5454",
              "id": 218,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "205:4:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_2ac50a34f0da9360cfd7e529a34ccdaa61aa98e2a0ac0928bf981af8e73352ba",
                "typeString": "literal_string \"TT\""
              },
              "value": "TT"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 222,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "213:24:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 220,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "213:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "32",
              "id": 221,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "236:1:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_2_by_1",
                "typeString": "int_const 2"
              },
              "value": "2"
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 225,
            "name": "INITIAL_SUPPLY",
            "nodeType": "VariableDeclaration",
            "scope": 241,
            "src": "241:34:3",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 223,
              "name": "uint",
              "nodeType": "ElementaryTypeName",
              "src": "241:4:3",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3132303030",
              "id": 224,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "270:5:3",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_12000_by_1",
                "typeString": "int_const 12000"
              },
              "value": "12000"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 239,
              "nodeType": "Block",
              "src": "301:83:3",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 230,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 228,
                      "name": "totalSupply_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 373,
                      "src": "307:12:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 229,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "322:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "307:29:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 231,
                  "nodeType": "ExpressionStatement",
                  "src": "307:29:3"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 237,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "baseExpression": {
                        "argumentTypes": null,
                        "id": 232,
                        "name": "balances",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 371,
                        "src": "342:8:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 235,
                      "indexExpression": {
                        "argumentTypes": null,
                        "expression": {
                          "argumentTypes": null,
                          "id": 233,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 791,
                          "src": "351:3:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 234,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": null,
                        "src": "351:10:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "342:20:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 236,
                      "name": "INITIAL_SUPPLY",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 225,
                      "src": "365:14:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "342:37:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 238,
                  "nodeType": "ExpressionStatement",
                  "src": "342:37:3"
                }
              ]
            },
            "documentation": null,
            "id": 240,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 226,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "291:2:3"
            },
            "returnParameters": {
              "id": 227,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "301:0:3"
            },
            "scope": 241,
            "src": "280:104:3",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 242,
        "src": "98:288:3"
      }
    ],
    "src": "0:387:3"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.1+commit.c8a2cb62.Emscripten.clang"
  },
  "networks": {
    "5777": {
      "events": {},
      "links": {},
      "address": "0xFdAc1fE4779B30e9580A3dFD2b9388a6327232e9",
      "transactionHash": "0x5912469a0c48b38f3d4daa6db1c6f6f711747ad1b2442ddbf77495e5e147dfee"
    }
  },
  "schemaVersion": "3.0.0-beta.2",
  "updatedAt": "2018-12-18T03:30:35.931Z",
  "devdoc": {
    "methods": {
      "allowance(address,address)": {
        "details": "Function to check the amount of tokens that an owner allowed to a spender.",
        "params": {
          "_owner": "address The address which owns the funds.",
          "_spender": "address The address which will spend the funds."
        },
        "return": "A uint256 specifying the amount of tokens still available for the spender."
      },
      "approve(address,uint256)": {
        "details": "Approve the passed address to spend the specified amount of tokens on behalf of msg.sender. Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_value": "The amount of tokens to be spent."
        }
      },
      "balanceOf(address)": {
        "details": "Gets the balance of the specified address.",
        "params": {
          "_owner": "The address to query the the balance of."
        },
        "return": "An uint256 representing the amount owned by the passed address."
      },
      "decreaseApproval(address,uint256)": {
        "details": "Decrease the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To decrement allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_spender": "The address which will spend the funds.",
          "_subtractedValue": "The amount of tokens to decrease the allowance by."
        }
      },
      "increaseApproval(address,uint256)": {
        "details": "Increase the amount of tokens that an owner allowed to a spender. approve should be called when allowed[_spender] == 0. To increment allowed value is better to use this function to avoid 2 calls (and wait until the first transaction is mined) From MonolithDAO Token.sol",
        "params": {
          "_addedValue": "The amount of tokens to increase the allowance by.",
          "_spender": "The address which will spend the funds."
        }
      },
      "totalSupply()": {
        "details": "Total number of tokens in existence"
      },
      "transfer(address,uint256)": {
        "details": "Transfer token for a specified address",
        "params": {
          "_to": "The address to transfer to.",
          "_value": "The amount to be transferred."
        }
      },
      "transferFrom(address,address,uint256)": {
        "details": "Transfer tokens from one address to another",
        "params": {
          "_from": "address The address which you want to send tokens from",
          "_to": "address The address which you want to transfer to",
          "_value": "uint256 the amount of tokens to be transferred"
        }
      }
    }
  },
  "userdoc": {
    "methods": {}
  }
}